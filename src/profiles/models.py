from django.db import models
from django.contrib.auth.models import User
from itertools import chain
import random

# Create your models here.

class Profile(models.Model):
    """This class represents a profile in the database. To create this class you need just a User(within the Django authentication system), other things are generated by default.
    """
    
    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name="perfil")
    created = models.DateTimeField(auto_now_add=True)
    

    def __str__(self) -> str:
        """The __str__ method in Python represents the class objects as a string

        Returns:
            [str]: Username of that user
        """
        return str(self.user)
    
    def get_contas(self):
        return self.contas.all()
    
    def get_contas_list(self):
        return [i for i in self.get_contas()]
    

    
class Conta(models.Model):
    """This class represent the Posts Table in the Database
    """
    nome = models.CharField(max_length=255)
    instituicao = models.CharField(max_length=255, default="Sem Instituição")
    tipo = models.CharField(max_length=255, default="Corrente")
    saldo = models.IntegerField(default=0)
    autor = models.ForeignKey(Profile, on_delete=models.CASCADE, null=True, related_name='contas')
    criado = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        """The __str__ method in Python represents the class objects as a string

        Returns:
            [str]: title
        """
        return f"{self.nome}"

    @property
    def get_autor(self):
        return Profile.objects.get(pk=self.author)


    def json(self):
        """Information about the object

        Returns:
            [JSON]: Returns the information in JSON of this object
        """
        return {
            'nome' : self.nome,
            'instituicao'  : self.instituicao
        }
        
    def get_receitas(self):
        return self.receitas.all()
    
    def get_receitas_list(self):
        return [i for i in self.get_receitas]
        
class Receita(models.Model):
    """
    """
    
    valor = models.IntegerField()
    autor =  models.ForeignKey(Conta, on_delete=models.CASCADE, null=True, related_name='receitas')
    descricao = models.CharField(max_length=255)
    created = models.DateTimeField(auto_now_add=True)
    dataPagamento = models.DateField()
    
    def __str__(self) -> str:
        return self.descricao
    
    def json(self):
        return {
            'descricao' : self.descricao,
            'conta' : self.autor
        }